/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/models/squirtle.glb -o src/components/squirtle.tsx 
*/

import * as THREE from "three";
import React from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Squirtle_Water_83CFDF: THREE.Mesh;
    Squirtle_Water_E09AA4: THREE.Mesh;
    Squirtle_Water_B76A91: THREE.Mesh;
    Squirtle_Water_Black: THREE.Mesh;
    Squirtle_Water_DCD36F: THREE.Mesh;
    Squirtle_Water_AD7757: THREE.Mesh;
    Squirtle_Water_White: THREE.Mesh;
  };
  materials: {
    Squirtle_Water_83CFDF: THREE.MeshPhysicalMaterial;
    Squirtle_Water_E09AA4: THREE.MeshPhysicalMaterial;
    Squirtle_Water_B76A91: THREE.MeshPhysicalMaterial;
    Squirtle_Water_Black: THREE.MeshPhysicalMaterial;
    Squirtle_Water_DCD36F: THREE.MeshPhysicalMaterial;
    Squirtle_Water_AD7757: THREE.MeshPhysicalMaterial;
    Squirtle_Water_White: THREE.MeshPhysicalMaterial;
  };
};

export function Squirtle(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/squirtle.glb") as GLTFResult;

  // 모든 재질에 대해 기본 PBR 속성 설정
  Object.values(materials).forEach((material) => {
    material.roughness = 0.8;
    material.metalness = 0.2;
    // material.envMapIntensity = 1;
  });

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Squirtle_Water_83CFDF.geometry}
        material={materials.Squirtle_Water_83CFDF}
      />
      <mesh
        geometry={nodes.Squirtle_Water_E09AA4.geometry}
        material={materials.Squirtle_Water_E09AA4}
      />
      <mesh
        geometry={nodes.Squirtle_Water_B76A91.geometry}
        material={materials.Squirtle_Water_B76A91}
      />
      <mesh
        geometry={nodes.Squirtle_Water_Black.geometry}
        material={materials.Squirtle_Water_Black}
      />
      <mesh
        geometry={nodes.Squirtle_Water_DCD36F.geometry}
        material={materials.Squirtle_Water_DCD36F}
      />
      <mesh
        geometry={nodes.Squirtle_Water_AD7757.geometry}
        material={materials.Squirtle_Water_AD7757}
      />
      <mesh
        geometry={nodes.Squirtle_Water_White.geometry}
        material={materials.Squirtle_Water_White}
      />
    </group>
  );
}

useGLTF.preload("/models/squirtle.glb");
